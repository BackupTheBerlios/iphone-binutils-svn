/*
 *     Generated by class-dump 3.1.1.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2006 by Steve Nygard.
 */

@class UIImage, UIView;

struct Bucket<KB::String, KB::Word>;

struct Bucket<unsigned int, KB::Vector<KB::Pair<KB::String, KB::DynamicDictionary::CustomType>>>;

struct CGAffineTransform {
    float a;
    float b;
    float c;
    float d;
    float tx;
    float ty;
};

struct CGColor;

struct CGContext;

struct CGImage;

struct CGPath;

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGShading;

struct CGSize {
    float width;
    float height;
};

struct DynamicDictionary {
    void **_field1;
    int _field2;
    int _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    struct _opaque_pthread_mutex_t _field8;
    struct _opaque_pthread_cond_t _field9;
    struct String _field10;
    struct Ring<KB::String, 640> _field11;
    struct Hashmap<unsigned int, KB::Vector<KB::Pair<KB::String, KB::DynamicDictionary::CustomType>>> _field12;
    struct Hashmap<KB::String, KB::Word> _field13;
};

struct HashTraits<KB::String>;

struct HashTraits<unsigned int>;

struct Hashmap<KB::String, KB::Word> {
    unsigned int m_size;
    unsigned int m_capacity;
    unsigned int m_table_size;
    unsigned int m_extra_size;
    unsigned int m_extra_index;
    _Bool m_rehashing;
    struct HashTraits<KB::String> m_traits;
    struct Bucket<KB::String, KB::Word> *m_table;
    struct Bucket<KB::String, KB::Word> *m_extra;
};

struct Hashmap<unsigned int, KB::Vector<KB::Pair<KB::String, KB::DynamicDictionary::CustomType>>> {
    unsigned int m_size;
    unsigned int m_capacity;
    unsigned int m_table_size;
    unsigned int m_extra_size;
    unsigned int m_extra_index;
    _Bool m_rehashing;
    struct HashTraits<unsigned int> m_traits;
    struct Bucket<unsigned int, KB::Vector<KB::Pair<KB::String, KB::DynamicDictionary::CustomType>>> *m_table;
    struct Bucket<unsigned int, KB::Vector<KB::Pair<KB::String, KB::DynamicDictionary::CustomType>>> *m_extra;
};

struct Ring<KB::String, 640> {
    unsigned int m_index;
    unsigned int m_size;
    struct String m_elements[640];
};

struct String {
    unsigned short m_size;
    unsigned short m_capacity;
    unsigned short m_length;
    unsigned char m_buffer_type;
    char *m_buffer;
    char m_static_buffer[16];
};

struct WKView;

struct WKWindow {
    struct _WKObject _field1;
    struct CGRect _field2;
    struct WKView *_field3;
    struct WKView *_field4;
    struct __GSEvent *_field5;
    void *_field6;
    void *_field7;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct _NSPoint {
    float _field1;
    float _field2;
};

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct _NSRect {
    struct _NSPoint _field1;
    struct _NSSize _field2;
};

struct _NSSize {
    float _field1;
    float _field2;
};

struct _NSZone;

struct _UIRectInsets {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct _UIRenderInfo {
    unsigned int _field1;
    unsigned int _field2;
    int _field3;
    char *_field4;
};

struct _WKClassInfo;

struct _WKObject {
    unsigned int referenceCount;
    struct _WKClassInfo *classInfo;
};

struct __CFArray;

struct __CFCharacterSet;

struct __CFDateFormatter;

struct __CFDictionary;

struct __CFMachPort;

struct __CFRunLoopObserver;

struct __CFString;

struct __CFTimeZone;

struct __CoreSurfaceBuffer;

struct __GSEvent;

struct __GSFont;

struct __GSHeartbeat;

struct __GSWindow;

struct __SCNetworkReachability;

struct _opaque_pthread_cond_t {
    long __sig;
    char __opaque[24];
};

struct _opaque_pthread_mutex_t {
    long __sig;
    char __opaque[40];
};

typedef struct {
    double width;
    double height;
} CDAnonymousStruct6;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
} CDAnonymousStruct3;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDAnonymousStruct9;

typedef struct {
    int _field1;
    int _field2;
    id _field3;
    id _field4;
    float _field5;
    int _field6;
    SEL _field7;
    id _field8;
} CDAnonymousStruct2;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    char _field5;
    char _field6;
} CDAnonymousStruct10;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    struct CGRect _field5;
    id _field6;
    id _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    id _field11;
} CDAnonymousStruct5;

typedef struct {
    struct CGRect left;
    struct CGRect middle;
    struct CGRect right;
} CDAnonymousStruct4;

typedef struct {
    float _field1;
    float _field2;
} CDAnonymousStruct1;

typedef struct {
    id _field1;
    struct CGColor *_field2;
    struct CGColor *_field3;
    id _field4;
} CDAnonymousStruct7;

typedef struct {
    CDAnonymousStruct4 top;
    struct {
        struct CGRect _field1;
        struct CGRect _field2;
        struct CGRect _field3;
    } middle;
    struct {
        struct CGRect _field1;
        struct CGRect _field2;
        struct CGRect _field3;
    } bottom;
} CDAnonymousStruct11;

typedef struct {
    UIImage *left;
    UIImage *right;
    UIImage *center;
} CDAnonymousStruct8;

typedef struct {
    int _field1;
    unsigned short _field2;
    unsigned short _field3;
    short _field4;
    short _field5;
    short _field6;
    short _field7;
    unsigned char _field8;
    unsigned char _field9;
    struct {
        unsigned char _field1;
        unsigned char _field2;
        unsigned char _field3;
        float _field4;
        struct CGPoint _field5;
    } _field10[0];
} CDAnonymousStruct12;

typedef union {
    UIImage *image;
    UIView *view;
} CDAnonymousUnion1;

